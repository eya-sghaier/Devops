name: CI Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -y make autoconf cmake doxygen

      - name: Build project
        run: |
          mkdir -p build
          cd build
          cmake ..
          make

  test-linux:
    runs-on: ubuntu-latest
    needs: build-linux
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run unit tests
        run: |
          chmod +x ./build/test/unit_test
          ./build/test/unit_test

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build project with CMake
        run: |
          mkdir build
          cd build
          "C:\Program Files\CMake\bin\cmake.exe" -G "Visual Studio 15 2017 Win64" -DBUILD_LIBTIFF=ON ..
          "C:\Program Files\CMake\bin\cmake.exe" ..
          "C:\Program Files\CMake\bin\cmake.exe" --build . --config Release --target ALL_BUILD

  build-docker:
    runs-on: ubuntu-latest
    needs: build-linux
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t your_dockerhub_username/your-image-name:latest .
          docker push your_dockerhub_username/your-image-name:latest

  generate-docs:
    runs-on: ubuntu-latest
    needs: build-linux
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Doxygen
        run: |
          sudo apt update
          sudo apt install -y doxygen

      - name: Generate Documentation
        run: |
          doxygen Doxyfile

      - name: Upload Documentation
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./docs/html
